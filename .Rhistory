(Fx_Hour  == Fx)  ) %>%
select(-Quarter)
seasonal_subset = CI_Ensemble_Stats %>% filter((Variable == Var) &
(Height   == Hgt) &
(Fx_Hour  == Fx)  )
myplot = ggplot(data = seasonal_subset) +
aes(x       = Ens_StDev,
y       = RMSE_Ens000,
color   = Quarter) +
facet_wrap(facets = ~ Quarter) +
theme_bw() +
theme(strip.background = element_rect(fill=NA)) +
labs(title    = str_c(Fx,
"-hr Forecast, CI Seasonal Triangles for ",
Varname,
sep = ""),
subtitle = str_c(region_name,
sep = "")) +
xlab("Ensemble Standard Deviation") +
ylab("Root Mean Squared Error") +
geom_point(data    = fx_subset,
color   = "lightgrey") +
geom_point(data    = seasonal_subset)
print(myplot)
}
Var     = "T2M"
Varname = "2-m Air Temperature"
Hgt     = 2
Fx      = 24
for (Fx in Fx_Hour[2:length(Fx_Hour)]) {
fx_subset = CI_Ensemble_Stats %>% filter((Variable == Var) &
(Height   == Hgt) &
(Fx_Hour  == Fx)  ) %>%
select(-Quarter)
seasonal_subset = CI_Ensemble_Stats %>% filter((Variable == Var) &
(Height   == Hgt) &
(Fx_Hour  == Fx)  )
myplot = ggplot(data = seasonal_subset) +
aes(x       = Ens_StDev,
y       = RMSE_Ens000,
color   = Quarter) +
facet_wrap(facets = ~ Quarter) +
theme_bw() +
theme(strip.background = element_rect(fill=NA),
) +
labs(title    = str_c(Fx,
"-hr Forecast, CI Seasonal Triangles for ",
Varname,
sep = ""),
subtitle = str_c(region_name,
sep = "")) +
xlab("Ensemble Standard Deviation") +
ylab("Root Mean Squared Error") +
geom_point(data    = fx_subset,
color   = "lightgrey") +
color_fill_manual(values=c("DJF" = "cyan",
"MAM" = "green",
"JJA" = "magenta",
"SON" = "orange"),
guide =FALSE) +
geom_point(data    = seasonal_subset)
print(myplot)
}
Var     = "T2M"
Varname = "2-m Air Temperature"
Hgt     = 2
Fx      = 24
for (Fx in Fx_Hour[2:length(Fx_Hour)]) {
fx_subset = CI_Ensemble_Stats %>% filter((Variable == Var) &
(Height   == Hgt) &
(Fx_Hour  == Fx)  ) %>%
select(-Quarter)
seasonal_subset = CI_Ensemble_Stats %>% filter((Variable == Var) &
(Height   == Hgt) &
(Fx_Hour  == Fx)  )
myplot = ggplot(data = seasonal_subset) +
aes(x       = Ens_StDev,
y       = RMSE_Ens000,
color   = Quarter) +
facet_wrap(facets = ~ Quarter) +
theme_bw() +
theme(strip.background = element_rect(fill=NA),
) +
labs(title    = str_c(Fx,
"-hr Forecast, CI Seasonal Triangles for ",
Varname,
sep = ""),
subtitle = str_c(region_name,
sep = "")) +
xlab("Ensemble Standard Deviation") +
ylab("Root Mean Squared Error") +
geom_point(data    = fx_subset,
color   = "lightgrey") +
discrete_color_manual(values=c("DJF" = "cyan",
"MAM" = "green",
"JJA" = "magenta",
"SON" = "orange"),
guide =FALSE) +
geom_point(data    = seasonal_subset)
print(myplot)
}
Var     = "T2M"
Varname = "2-m Air Temperature"
Hgt     = 2
Fx      = 24
for (Fx in Fx_Hour[2:length(Fx_Hour)]) {
fx_subset = CI_Ensemble_Stats %>% filter((Variable == Var) &
(Height   == Hgt) &
(Fx_Hour  == Fx)  ) %>%
select(-Quarter)
seasonal_subset = CI_Ensemble_Stats %>% filter((Variable == Var) &
(Height   == Hgt) &
(Fx_Hour  == Fx)  )
myplot = ggplot(data = seasonal_subset) +
aes(x       = Ens_StDev,
y       = RMSE_Ens000,
color   = Quarter) +
facet_wrap(facets = ~ Quarter) +
theme_bw() +
theme(strip.background = element_rect(fill=NA),
) +
labs(title    = str_c(Fx,
"-hr Forecast, CI Seasonal Triangles for ",
Varname,
sep = ""),
subtitle = str_c(region_name,
sep = "")) +
xlab("Ensemble Standard Deviation") +
ylab("Root Mean Squared Error") +
geom_point(data    = fx_subset,
color   = "lightgrey") +
scale_colour_manual(values=c("DJF" = "cyan",
"MAM" = "green",
"JJA" = "magenta",
"SON" = "orange"),
guide =FALSE) +
geom_point(data    = seasonal_subset)
print(myplot)
}
install.packages("overlapping")
library(package = "tidyverse")
library(package = "tidypredict")
library(package = "ncdf4")
library(package = "lubridate") # processing dates and time
library(package = "stringr")
library(package = "reshape2")  # manipulating data frames
library(package = "abind")
library(package = "ggridges")
library(package = "parallel")
library(package = "overlapping")
library(package = "lattice")
closeAllConnections()
URL_on = TRUE
if (URL_on) {
URL_Root_Directory = "http://kyrill.ias.sdsmt.edu:8080/thredds/fileServer/LOCA_NGP/climatology/DERIVED/MONTHLY"
} else {
URL_Root_Directory = "/maelstrom2/LOCA_GRIDDED_ENSEMBLES/LOCA_NGP/climatology/DERIVED/MONTHLY"
}
# get URL files  "return_statistics_NGP_LOCA_rcp45_pr_2035-2064.RData"
LOCA_File_Base  = "LOCA_NGP_CLIMATEZONES_allvar"
ensemble_site  =  c("ACCESS1-0_r1i1p1",
"ACCESS1-3_r1i1p1",
"CCSM4_r6i1p1",
"CESM1-BGC_r1i1p1",
"CESM1-CAM5_r1i1p1",
"CMCC-CMS_r1i1p1",
"CMCC-CM_r1i1p1",
"CNRM-CM5_r1i1p1",
"CSIRO-Mk3-6-0_r1i1p1",
"CanESM2_r1i1p1",
"FGOALS-g2_r1i1p1",
"GFDL-CM3_r1i1p1",
"GFDL-ESM2G_r1i1p1",
"GFDL-ESM2M_r1i1p1",
"HadGEM2-AO_r1i1p1",
"HadGEM2-CC_r1i1p1",
"HadGEM2-ES_r1i1p1",
"IPSL-CM5A-LR_r1i1p1",
"IPSL-CM5A-MR_r1i1p1",
"MIROC-ESM_r1i1p1",
"MIROC-ESM-CHEM_r1i1p1",
"MIROC5_r1i1p1",
"MPI-ESM-LR_r1i1p1",
"MPI-ESM-MR_r1i1p1",
"MRI-CGCM3_r1i1p1",
"NorESM1-M_r1i1p1",
"bcc-csm1-1-m_r1i1p1")
hist_year_start = 1976
hist_year_end   = 2005
futr_year_start = 2035
futr_year_end   = 2064
#hist_year_start = 1950
#hist_year_end   = 1950+29
#futr_year_start = 2019-29
#futr_year_end   = 2019
Target_Zone = "3907" # East-Cent SD
#Target_Zone = "2107" # SE Minn
Target_Zone = "3904" # Black Hills SD
#Target_Zone = "4004" # Western TN
#Target_Zone = "1305" # Central IA
zone_name_LUT_file_name = "~/GitHub/FEW_CROP_MiGRAGTION/Climate_Zones_Name_LUT.Rdata"
load(file = zone_name_LUT_file_name)
hist_date_string  = str_c(hist_year_start,
"-",
hist_year_end,
sep="")
futr_date_string =  str_c(futr_year_start,
"-",
futr_year_end,
sep="")
# Base Period
print("Importing Historical Case")
for (ensemble in ensemble_site) { # ensembles
# Historical
{  # Historical
scenario = "historical"
year_start = hist_year_start
year_end   = hist_year_end
print(str_c("Processing ",
ensemble,
" ",
scenario))
LOCA_URL        = str_c(URL_Root_Directory,
"/",
LOCA_File_Base,
"_",
ensemble,
"_",
scenario,
".Rdata",
sep="")
if (URL_on) {
load(file = url(LOCA_URL))
} else {
load(file = (LOCA_URL))
}
loca_climate_zone_stats = loca_climate_zone_stats %>%
filter((year(Time) >= year_start) &
(year(Time) <= year_end)   ) %>%
select(Time,
Climate_Zones,
Ensemble,
Scenario,
pr.mean,
tasmax.mean,
tasmin.mean)
loca_climate_zone_stats$Scenario = str_c("Historical (",
hist_date_string, ")",
sep = "")
if ((ensemble == ensemble_site[1]) &
scenario == "historical") {  # if  first ensemble accessed
all_loca = loca_climate_zone_stats
} else {  # if not first ensemble accessed
all_loca =  rbind(all_loca, loca_climate_zone_stats)
} # if not first ensemble accessed
remove(loca_climate_zone_stats)
remove(year_start)
remove(year_end)
} # Historical
{  # RCP45
scenario = "rcp45"
year_start = futr_year_start
year_end   = futr_year_end
print(str_c("Processing ",
ensemble,
" ",
scenario))
LOCA_URL        = str_c(URL_Root_Directory,
"/",
LOCA_File_Base,
"_",
ensemble,
"_",
scenario,
".Rdata",
sep="")
if (URL_on) {
load(file = url(LOCA_URL))
} else {
load(file = (LOCA_URL))
}
loca_climate_zone_stats = loca_climate_zone_stats %>%
filter((year(Time) >= year_start) &
(year(Time) <= year_end)   ) %>%
select(Time,
Climate_Zones,
Ensemble,
Scenario,
pr.mean,
tasmax.mean,
tasmin.mean)
loca_climate_zone_stats$Scenario = str_c("RCP 4.5 (",
futr_date_string, ")",
sep = "")
all_loca = rbind(all_loca, loca_climate_zone_stats)
remove(loca_climate_zone_stats)
remove(year_start)
remove(year_end)
} # RCP45
{  # RCP85
scenario = "rcp85"
year_start = futr_year_start
year_end   = futr_year_end
print(str_c("Processing ",
ensemble,
" ",
scenario))
LOCA_URL        = str_c(URL_Root_Directory,
"/",
LOCA_File_Base,
"_",
ensemble,
"_",
scenario,
".Rdata",
sep="")
if (URL_on) {
load(file = url(LOCA_URL))
} else {
load(file = (LOCA_URL))
}
loca_climate_zone_stats = loca_climate_zone_stats %>%
filter((year(Time) >= year_start) &
(year(Time) <= year_end)   ) %>%
select(Time,
Climate_Zones,
Ensemble,
Scenario,
pr.mean,
tasmax.mean,
tasmin.mean)
loca_climate_zone_stats$Scenario = str_c("RCP 8.5 (",
futr_date_string, ")",
sep = "")
all_loca = rbind(all_loca, loca_climate_zone_stats)
remove(loca_climate_zone_stats)
remove(year_start)
remove(year_end)
} # RCP85
} # ensembles
all_loca$Month = factor(x      = format((all_loca$Time),"%b"),
levels = c("Jan","Feb","Mar","Apr","May","Jun",
"Jul","Aug","Sep","Oct","Nov","Dec"))
all_loca$tasmax.mean.degF = all_loca$tasmax.mean * 9/5 + 32
all_loca$tasmin.mean.degF = all_loca$tasmin.mean * 9/5 + 32
all_loca$pr.mean.in        = all_loca$pr.mean / 25.4
closeAllConnections()
zone_loca = all_loca %>% filter(Climate_Zones == Target_Zone)
lut_k = which(Climate_Zones_Name_LUT$Full_Zone_Code == Target_Zone)
ggplot(data = zone_loca) +
theme_bw() +
aes(x     = tasmin.mean.degF,
y     = fct_rev(Month),
color = Scenario,
fill  = Scenario) +
ylab("") +
ggtitle(label    =  "CMIP5-LOCA Ensemble Distributions",
subtitle = str_c("Climate Zone -",
Climate_Zones_Name_LUT$State_Name[lut_k],
" : ",
Climate_Zones_Name_LUT$Zone_Name[lut_k],
"  (",Target_Zone, ")",
sep = "")) +
labs(caption = "Aggregated climate zone means across LOCA ensembles") +
xlab("Minimum Mean Monthly Temperature (°F)") +
scale_fill_manual(values=c("blue","orange","red"))+
scale_color_manual(values=c("blue","orange","red"))+
geom_density_ridges2(alpha = 0.25)
ggplot(data = zone_loca) +
theme_bw() +
aes(x     = tasmax.mean.degF,
y     = fct_rev(Month),
color = Scenario,
fill  = Scenario) +
ggtitle(label    =  "CMIP5-LOCA Ensemble Distributions",
subtitle = str_c("Climate Zone -",
Climate_Zones_Name_LUT$State_Name[lut_k],
" : ",
Climate_Zones_Name_LUT$Zone_Name[lut_k],
"  (",Target_Zone, ")",
sep = "")) +
labs(caption = "Aggregated climate zone means across LOCA ensembles") +
ylab("") +
xlab("Maximum Mean Monthly Temperature (°F)") +
scale_fill_manual(values=c("blue","orange","red"))+
scale_color_manual(values=c("blue","orange","red"))+
geom_density_ridges2(alpha = 0.25)
# rainfall
ggplot(data = zone_loca) +
theme_bw() +
aes(x = pr.mean.in,
y = fct_rev(Month),
color = Scenario,
fill = Scenario) +
xlim(c(0,quantile(all_loca$pr.mean.in, 0.99, na.rm=TRUE))) +
ggtitle(label    =  "CMIP5-LOCA Ensemble Distributions",
subtitle = str_c("Climate Zone -",
Climate_Zones_Name_LUT$State_Name[lut_k],
" : ",
Climate_Zones_Name_LUT$Zone_Name[lut_k],
"  (",Target_Zone, ")",
sep = "")) +
labs(caption = "Aggregated climate zone means across LOCA ensembles") +
ylab("") +
xlab("Mean Monthly Precipitation (in)") +
scale_fill_manual( values=c("green","orange","red"))+
scale_color_manual(values=c("darkgreen","darkorange","darkred"))+
geom_density_ridges2(alpha = 0.25)
# both Max/Min Temperatures
ggplot(data = zone_loca) +
theme_bw() +
aes(x = tasmax.mean.degF,
y = fct_rev(Month),
fill = Scenario) +
ggtitle(label    =  "CMIP5-LOCA Ensemble Distributions",
subtitle = str_c("Climate Zone -",
Climate_Zones_Name_LUT$State_Name[lut_k],
" : ",
Climate_Zones_Name_LUT$Zone_Name[lut_k],
"  (",Target_Zone, ")",
sep = "")) +
labs(caption = "Aggregated climate zone means across LOCA ensembles") +
ylab("") +
xlim(c(quantile(all_loca$tasmin.mean.degF, 0.005, na.rm=TRUE),
quantile(all_loca$tasmax.mean.degF, 0.995, na.rm=TRUE))) +
xlab("Max/Min Mean Monthly Temperature (°F)") +
scale_fill_manual(values=c("blue","orange","red"))+
scale_color_manual(values=c("blue","orange","red"))+
geom_density_ridges2(alpha = 0.25) +
geom_density_ridges2(mapping = aes(x    = tasmin.mean.degF,
y    = fct_rev(Month),
color = Scenario,
fill = Scenario),
alpha = 0.25)
# both Max/Min Temperatures
ggplot(data = zone_loca) +
theme_bw() +
aes(x = tasmax.mean.degF,
y = fct_rev(Month),
fill = Scenario) +
ggtitle(label    =  "CMIP5-LOCA Ensemble Distributions",
subtitle = str_c("Climate Zone -",
Climate_Zones_Name_LUT$State_Name[lut_k],
" : ",
Climate_Zones_Name_LUT$Zone_Name[lut_k],
"  (",Target_Zone, ")",
sep = "")) +
labs(caption = "Aggregated climate zone means across LOCA ensembles") +
ylab("") +
xlim(c(quantile(all_loca$tasmin.mean.degF, 0.005, na.rm=TRUE),
quantile(all_loca$tasmax.mean.degF, 0.995, na.rm=TRUE))) +
xlab("Max/Min Mean Monthly Temperature (°F)") +
scale_fill_manual(values=c("blue","orange","red"))+
scale_color_manual(values=c("blue","orange","red"))+
geom_density_ridges2(alpha = 0.25) +
geom_density_ridges2(mapping = aes(x    = tasmin.mean.degF,
y    = fct_rev(Month),
fill = Scenario),
alpha = 0.25)
# both Max/Min Temperatures
ggplot(data = zone_loca) +
theme_bw() +
aes(x = tasmax.mean.degF,
y = fct_rev(Month),
fill = Scenario) +
ggtitle(label    =  "CMIP5-LOCA Ensemble Distributions",
subtitle = str_c("Climate Zone -",
Climate_Zones_Name_LUT$State_Name[lut_k],
" : ",
Climate_Zones_Name_LUT$Zone_Name[lut_k],
"  (",Target_Zone, ")",
sep = "")) +
labs(caption = "Aggregated climate zone means across LOCA ensembles") +
ylab("") +
xlim(c(quantile(all_loca$tasmin.mean.degF, 0.005, na.rm=TRUE),
quantile(all_loca$tasmax.mean.degF, 0.995, na.rm=TRUE))) +
xlab("Max/Min Mean Monthly Temperature (°F)") +
scale_fill_manual(values=c("blue","orange","red"))+
scale_color_manual(values=c("blue","orange","red"))+
geom_density_ridges2(alpha = 0.25) +
geom_density_ridges2(mapping = aes(x    = tasmin.mean.degF,
y    = fct_rev(Month),
color = NA,
fill = Scenario),
alpha = 0.25)
# both Max/Min Temperatures
ggplot(data = zone_loca) +
theme_bw() +
aes(x = tasmax.mean.degF,
y = fct_rev(Month),
color = Scenario,
fill = Scenario) +
ggtitle(label    =  "CMIP5-LOCA Ensemble Distributions",
subtitle = str_c("Climate Zone -",
Climate_Zones_Name_LUT$State_Name[lut_k],
" : ",
Climate_Zones_Name_LUT$Zone_Name[lut_k],
"  (",Target_Zone, ")",
sep = "")) +
labs(caption = "Aggregated climate zone means across LOCA ensembles") +
ylab("") +
xlim(c(quantile(all_loca$tasmin.mean.degF, 0.005, na.rm=TRUE),
quantile(all_loca$tasmax.mean.degF, 0.995, na.rm=TRUE))) +
xlab("Max/Min Mean Monthly Temperature (°F)") +
scale_fill_manual(values=c("blue","orange","red"))+
scale_color_manual(values=c("blue","orange","red"))+
geom_density_ridges2(alpha = 0.25) +
geom_density_ridges2(mapping = aes(x    = tasmin.mean.degF,
y    = fct_rev(Month),
color = Scenario,
fill = Scenario),
alpha = 0.25)
